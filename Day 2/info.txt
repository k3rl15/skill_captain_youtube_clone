Components in React

Concept:

Let's delve deeper into React components and understand how they play a crucial role in building reusable and modular user interfaces. Components are a fundamental concept 
in React, allowing you to create encapsulated and reusable pieces of UI.
What is a React Component?
A React component is a self-contained, reusable piece of code that represents a part of the user interface. Components can be as simple as a button or as complex as an 
entire page. They encapsulate the markup (HTML), styling (CSS), and behavior (JavaScript) associated with a specific part of the UI.
Why Use Components?
1. Reusability: Components allow you to build reusable UI elements. For example, you could create a `Button` component and use it across multiple pages or sections of your 
application.
2. Modularity: Components promote modularity by breaking down the UI into smaller, manageable pieces. Each component is responsible for its own functionality, making the 
codebase easier to understand and maintain.
3. Maintainability: Components make it easier to update and maintain your code. If a change is needed, you can make updates in one place (the component) rather than 
throughout your entire application.
Creating a Simple React Component
Let's create a simple React component as an example. Open your project in a text editor or integrated development environment (IDE).
1. Create a new file named `Button.js`:
// Button.js
import React from 'react';

export default function Button {
  return (
    <button>
      Click me
    </button>
  );
}

export default Button;

2. Using the Component in a Page:
Now, let's use this `Button` component in another file, say `Page.jsx` inside src/app:
// Page.jsx
import React from 'react';
"use client"
import React from 'react';
import MediaPlayer from '@/components/MediaPlayer';
import Suggestion from '@/components/Suggestion';

export default function HomePage() {
  return (
    <div>
      <h1>Welcome to My App</h1>
      <Button />
    </div>
  );
}

Run Your nextJS App:
Run your React app using the development server (e.g., `npm run dev`), and you should see the "Welcome to My App" heading and a button rendered on the page.
Recap:
- Components are the building blocks of a React application. - They encapsulate UI elements, making them reusable and maintainable. - Components can include HTML, CSS, 
and JavaScript, providing a modular and organized structure to your codebase.
